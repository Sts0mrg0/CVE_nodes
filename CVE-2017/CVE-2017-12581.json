{"cve_repaire_en": "", "cve_code_exp_url": "", "cve_id": "CVE-2017-12581", "cve_categories": ["category1", "category2"], "cve_code_detect_url": "", "cve_name": "cve_name", "cve_risk_level": "determine", "cve_detail_en": "GitHub Electron before 1.6.8 allows remote command execution because of a nodeIntegration bypass vulnerability. This also affects all applications that bundle Electron code equivalent to 1.6.8 or earlier. Bypassing the Same Origin Policy (SOP) is a precondition; however, recent Electron versions do not have strict SOP enforcement. Combining an SOP bypass with a privileged URL internally used by Electron, it was possible to execute native Node.js primitives in order to run OS commands on the user's host. Specifically, a chrome-devtools://devtools/bundled/inspector.html window could be used to eval a Node.js child_process.execFile API call.", "cve_name_en": "cve_name_en", "edit_time": "Sat Oct 12 15:52:47 2019", "cve_code_des_url": "", "cve_other_info": "", "modify_time": "2017-08-07", "cve_detail": "", "references": [{"URL": "https://blog.doyensec.com/2017/08/03/electron-framework-security.html", "Description": "MISC:https://blog.doyensec.com/2017/08/03/electron-framework-security.html"}, {"URL": "https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf", "Description": "MISC:https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf"}], "cve_repaire": "", "editor": "warcup", "add_time": "2017-08-05"}